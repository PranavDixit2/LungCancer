# -*- coding: utf-8 -*-
"""Untitled27.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WPakXPtF90F7phglLMtZDY1xRnP6cryc
"""

import tensorflow as tf
from google.colab import drive
drive.mount('/content/drive')
# Set destination path in your Drive
drive_dest = '/content/drive/MyDrive/lung_cancer_dataset/'
# Move from Drive to local before deployment (if using Colab)
!cp "/content/drive/MyDrive/lung_cancer_model.keras" "./lung_cancer_model.keras"

# Load the saved model (ensure this path matches your actual path)
model = tf.keras.models.load_model('lung_cancer_model.keras')

import numpy as np
from PIL import Image
import cv2

def preprocess_image(image, target_size=(150, 150)):
    image = image.resize(target_size)
    img_array = tf.keras.preprocessing.image.img_to_array(image)
    img_array = np.expand_dims(img_array, axis=0)
    img_array = tf.keras.applications.resnet50.preprocess_input(img_array)
    return img_array

def predict(image):
    img_array = preprocess_image(image)
    prediction = model.predict(img_array)[0][0]
    label = "Cancer" if prediction > 0.5 else "Normal"
    confidence = prediction if prediction > 0.5 else 1 - prediction
    return label, float(confidence)

!pip install streamlit
!pip install pyngrok

import streamlit as st
from PIL import Image

st.set_page_config(page_title="Lung Cancer Detector", layout="centered")

st.title("ðŸ©º Lung Cancer Detection from Chest X-rays")
st.markdown("Upload a chest X-ray image, and the model will predict whether it's **Cancerous** or **Normal**.")

uploaded_file = st.file_uploader("Upload Chest X-ray", type=["jpg", "jpeg", "png"])

if uploaded_file is not None:
    image = Image.open(uploaded_file).convert("RGB")
    st.image(image, caption="Uploaded X-ray", use_column_width=True)

    with st.spinner("Analyzing..."):
        label, confidence = predict(image)

    st.success(f"**Prediction:** {label}")
    st.info(f"**Confidence:** {confidence:.2%}")